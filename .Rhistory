a <- c("Sam", "Rebecca", "Jana")
b <- c("Nick", "Megan", "Luke")
result.df <- expand.grid(a, b)
result.df
result.df =
data.frame(p1 = sample(c("Nick", "Megan", "Luke"), 3, replace=F), p2 = sample(c("Sam", "Rebecca", "Janna"), 3, replace=F))
data.frame(p1 = sample(c("Nick", "Megan", "Luke"), 3, replace=F), p2 = sample(c("Sam", "Rebecca", "Janna"), 3, replace=F))
data.frame(p1 = sample(c("Nick", "Megan", "Luke"), 3, replace=F), p2 = sample(c("Sam", "Rebecca", "Janna"), 3, replace=F))
data.frame(p1 = sample(c("Nick", "Megan", "Luke"), 3, replace=F), p2 = sample(c("Sam", "Rebecca", "Janna"), 3, replace=F))
data.frame(p1 = sample(c("Nick", "Megan", "Luke"), 3, replace=F), p2 = sample(c("Sam", "Rebecca", "Janna"), 3, replace=F))
1.48 + (.04*18.6) + (.01*52) + (.27*1)
exp(1.48 + (.04*18.6) + (.01*52) + (.27*1))
exp(1.48 + (.04*1) + (.01*52) + (.27*1))
exp(1.48 + (.04*1) + (.01*65) + (.27*1))
exp(1.48 + (.04*5) + (.01*65) + (.27*1))
exp(2.40 + (0.05*10) + (0.008*65) + (0.26*1))
exp(1.48 + (0.04*10) + (.01*65)   + (0.27*1))
exp(1.48 + (0.04*8) + (.01*65)   + (0.27*1))
exp(2.40 + (0.05*8) + (0.008*65) + (0.26*1))
exp(1.48 + (0.04*(2024-2015)) + (.01*65)   + (0.27*1))
exp(2.40 + (0.05*(2024-2015)) + (0.008*65) + (0.26*1))
2024-2015
exp(1.48 + (0.04*(2024-2015)) + (0.01*65)  + (0.27*1))
exp(2.40 + (0.05*(2024-2015)) + (0.008*65) + (0.26*1))
20-18.57
1.43*1.43
((curryear-gradyear)-18.57)^2
curryear = 2019
gradyear = 2015
((curryear-gradyear)-18.57)^2
(curryear-gradyear)
(curryear-gradyear)-18.57
(0.001*(((curryear-gradyear)-18.57)^2)
)
curryear = 2019
gradyear = 2015
research = 65
precocity = 2
genetics = conservation = 1
exp(1.37 + (0.044*(curryear-gradyear) + (0.001*(((curryear-gradyear)-18.57)^2)) + (0.006*research) + (0.022*precocity) + (0.264*genetics) + (0.101*conservation)
)
)
exp(1.37 + (0.044*(curryear-gradyear)) + (0.001*(((curryear-gradyear)-18.57)^2)) + (0.006*research) + (0.022*precocity) + (0.264*genetics) + (0.101*conservation))
curryear = 2024
exp(1.37 + (0.044*(curryear-gradyear)) + (0.001*(((curryear-gradyear)-18.57)^2)) + (0.006*research) + (0.022*precocity) + (0.264*genetics) + (0.101*conservation))
curryear = 2019
gradyear = 2015
research = 60
precocity = 2
genetics = conservation = 1
exp(1.37 + (0.044*(curryear-gradyear)) + (0.001*(((curryear-gradyear)-18.57)^2)) + (0.006*research) + (0.022*precocity) + (0.264*genetics) + (0.101*conservation))
research = 50
exp(1.37 + (0.044*(curryear-gradyear)) + (0.001*(((curryear-gradyear)-18.57)^2)) + (0.006*research) + (0.022*precocity) + (0.264*genetics) + (0.101*conservation))
data = read.table("~/Desktop/18354202020.csv", header=T, sep=",")
data = read.table("~/Desktop/18354202020.csv", header=T, sep=",")
data = read.table("~/Desktop/18354202020.csv", header=T, sep=",")
head(data)
table(data$Curr.)
fw = c("PFOR", "NTR", "WLDE", "WLEM", "WLPV")
d = data[data$Curr. %in% fw,]
22+25+4+1
52/63
remove(d)
data = read.table("~/Desktop/18354202020.csv", header=T, sep=",")
fw = c("APEF", "BIOP", "ECFY", "ESSF", "FFIN", "FORB", "FOR", "FOWG", "GSEI", "NATR", "PFOR", "RECL", "TRNS", "UNFW", "WLDE", "WLDG", "WLEM", "WLPV")
d = data[data$Curr. %in% fw,]
table(d$Curr.)
fw.students = data[data$Curr. %in% fw,]
other.students = data[data$Curr. !%in% fw,]
subset(data, !(data$Cur %in% fw))
fw.students = subset(data, (data$Cur %in% fw))
other.students = subset(data, !(data$Cur %in% fw))
remove(d)
table(data$CL.)
table(data$CL., data$Curr.)
data[data$CL.=="SR",]
data = read.table("~/Desktop/18354202020.csv", header=T, sep=",")  #current roster
data = read.table("~/Desktop/WILD 2050/2020_Spring/18354202020.csv", header=T, sep=",")  #current roster
fw   = c("APEF", "BIOP", "ECFY", "ESSF", "FFIN", "FORB", "FOR",    #forestry and wildlife majors
"FOWG", "GSEI", "NATR", "PFOR", "RECL", "TRNS", "UNFW",
"WLDE", "WLDG", "WLEM", "WLPV")
fw.students    = subset(data, (data$Cur %in% fw))
other.students = subset(data, !(data$Cur %in% fw))
table(fw.students$Curr.)
23+26+4
table(other.students$Curr.)
data = read.table("~/Desktop/WILD 2050/2020_Spring/18354202020.csv", header=T, sep=",")  #current roster
data = read.table("~/Desktop/WILD 2050/2020_Spring/extras/18354202020.csv", header=T, sep=",")  #current roster
fw   = c("APEF", "BIOP", "ECFY", "ESSF", "FFIN", "FORB", "FOR",    #forestry and wildlife majors
"FOWG", "GSEI", "NATR", "PFOR", "RECL", "TRNS", "UNFW",
"WLDE", "WLDG", "WLEM", "WLPV")
head(data)
fw.students    = subset(data, (data$Cur %in% fw))
table(fw.students$Curr.)
table(fw.students$Curr., fw.students$CL.)
table(data$Curr., data$CL.)
13+1+7+2+16+3+7+2+1+1
fw.students[fw.students$CL.=="SR",]
?quantile
?dna.dist
??dna.dist
??dist.dna
data = read.table("~/Desktop/IUCN_t.csv", header=T, sep=",")
table(data)
table(data$IUCN)
data = read.table("~/Desktop/IUCN_t.csv", header=T, sep=",")
table(data$sp)
head(table)
head(data)
table(data$Sp)
data$Sp
data = read.table("~/Desktop/IUCN_t.csv", header=T, sep=",")
table(data$Sp)
length(table(data$Sp))
head(data)
table(data$family)
table(data$Family)
sum(data$N.samples)
sum(data$N.samples, na.rm=T)
sum(data$NMicrosats, na.rm=T)
4+27+18+8
#estimate family mean/sd H
family = unique(data$Family)
family
#estimate family mean/sd H
family = as.list(unique(data$Family))
t = data[data$Family==as.character(f),,drop=F]
f=1
t = data[data$Family==as.character(f),,drop=F]
t
f
t = data[data$Family==as.character(family[f]),,drop=F]
t
family[f]
#estimate family mean/sd H
family = unique(data$Family)
t = data[data$Family==as.character(family[f]),,drop=F]
t
colnames(data) = c("Publications", "Family", "Sp", "NMicrosats", "IUCN", "IUCN2020", "t_prim", "t_all", "N", "Ne", "Ht_prim", "Ht_all", "Ho_mean", "Ho_sd", "Ne", "Nlocations", "Nsamples")
length(table(data$Sp))
table(data$Family)
sum(data$Nsamples, na.rm=T)
sum(data$NMicrosats, na.rm=T)
data = read.table("~/Desktop/IUCN_t.csv", header=T, sep=",")
colnames(data) = c("Publications", "Family", "Sp", "NMicrosats", "IUCN", "IUCN2020", "t_prim", "t_all", "N", "Ne", "Ht_prim", "Ht_all", "Ho_mean", "Ho_sd", "Ne", "Nlocations", "Nsamples")
length(table(data$Sp))
table(data$Family)
sum(data$Nsamples, na.rm=T)
sum(data$NMicrosats, na.rm=T)
#estimate family mean/sd H
family = unique(data$Family)
t = data[data$Family==as.character(family[f]),,drop=F]
t
OUT = NULL
length(t$Ho_mean, na.rm=T)
OUT = NULL
for(f in 1:lenght(family)){
t = data[data$Family==as.character(family[f]),,drop=F]
OUT = rbind(OUT, c(family[f], mean(t$Ho_mean, na.rm=T), sd(t$Ho_mean, na.rm=T), length(t$Ho_mean)))
}
for(f in 1:length(family)){
t = data[data$Family==as.character(family[f]),,drop=F]
OUT = rbind(OUT, c(family[f], mean(t$Ho_mean, na.rm=T), sd(t$Ho_mean, na.rm=T), length(t$Ho_mean)))
}
OUT
family
OUT = NULL
for(f in 1:length(family)){
t = data[data$Family==as.character(family[f]),,drop=F]
OUT = rbind(OUT, c(as.character(family[f]), mean(t$Ho_mean, na.rm=T), sd(t$Ho_mean, na.rm=T), length(t$Ho_mean)))
}
OUT
as.data.frame(OUT)
familydata = as.data.frame(OUT)
colnames(familydata) = c("family", "Ho_mean", "Ho_sd", "npops")
plot(-100, -100, xlim=c(1,4), ylim=c(0,0.7), xlab="Primate family", ylab="heterozygosity")
plot(-100, -100, xlim=c(0,4), ylim=c(0,0.7), xlab="Primate family", ylab="heterozygosity")
plot(-100, -100, xlim=c(0,5), ylim=c(0,0.7), xlab="Primate family", ylab="heterozygosity")
?axis
0.978 * 10^9 *4.22
4127160000/1000000000
0.978 * 10^9 *3.60
3520800000/1000000000
setwd("~/Documents/Projects/pupfish/dist_msatt//")
library(scales)
####setup####
data = read.table("msatt_genedist.csv", header=T, sep=",")
#does distance from closest gene influence observed heterozygosity?
mean(data$HoM, na.rm=T)
mean(data$HoS, na.rm=T) #mean across loci are very similar
#recode with 1 het per line and populaiton/locus as an indicator variable
pdata = data.frame(ho = c(data$HoM, data$HoS), dist = data$closegenedist, pop = c(rep("Malpais", nrow(data)), rep("SaltCreek", nrow(data))), locus = c(data$locus, data$locus))
pdata = pdata[complete.cases(pdata),]
####linear model with permutations - all data####
modelout = lm(ho~dist+pop, data=pdata)
summary(modelout)
#permute to estimate pvalues (since not normal)
pOUT = data.frame(rep=seq(1,1000), int=rep(NA, 1000), dist=rep(NA, 1000), pop=rep(NA, 1000))
for(i in 1:1000){
pdata$newy = sample(pdata$ho, length(pdata$ho), replace=F)
tempmodel  = lm(newy~dist+pop, data=pdata)
pOUT$int[i]   = coef(tempmodel)[1]
pOUT$dist[i]  = coef(tempmodel)[2]
pOUT$pop[i]   = coef(tempmodel)[3]
}
p.dist=nrow(pOUT[abs(coef(modelout)[2])<abs(pOUT$dist),])/i
p.pop =nrow(pOUT[abs(coef(modelout)[3])<abs(pOUT$pop),])/i
#plot data nicely
pdf(file="dist_het.pdf", height = 4, width = 4)
plot(-100,-100, xlim=c(0,650), ylim=c(0,1), xlab="Kbp to nearest gene", ylab="Heterozygosity")
Mdata = pdata[pdata$pop=="Malpais",,drop=F]
Sdata = pdata[pdata$pop=="SaltCreek",,drop=F]
points(Mdata$dist, Mdata$ho, pch=21, col=alpha("dodgerblue3", 1), bg=alpha("dodgerblue3", 0.5))
points(Sdata$dist, Sdata$ho, pch=22, col=alpha("firebrick3", 1), bg=alpha("firebrick3", 0.5))
abline(modelout)
dev.off()
####linear model with permutations - less than 100 Kbp####
spdata = pdata[pdata$dist<=100,,drop=F]
modelout = lm(ho~dist+pop, data=spdata)
summary(modelout)
